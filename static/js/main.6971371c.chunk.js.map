{"version":3,"sources":["Pages/style.js","Components/styles/Scoreboard.js","Components/Scoreboard.jsx","Components/styles/Buttons.js","Components/Buttons.jsx","Pages/Game.jsx","Pages/Login.jsx","Pages/Layout.jsx","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","User","Ia","VS","h2","Scoreboard","userName","userPoints","iaPoints","className","fadeInKeyframes","keyframes","fadeIn","css","FeedBack","Button","Buttons","setIaPoints","setUserPoints","useState","undefined","feedBack","setFeedBack","calcularGanador","userElection","iaElection","setIaElection","activeButton","setTimeout","Math","trunc","random","id","element","document","getElementById","clase","class","role","size","onClick","e","Game","setuserPoints","setiaPoints","Login","setuserName","htmlFor","type","name","value","Layout","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6971371c.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Container = styled.div`\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n`","import styled from 'styled-components'\n\n\nexport const User = styled.div`\n    background-color:blue\n`\nexport const Ia = styled.div`\n    background-color:red\n`\n\nexport const Container = styled.div`\n    position:relative\n`\nexport const VS = styled.h2`\n    letter-spacing:10px;\n    position:absolute;\n    top:40%;\n    left: 0.7%;\n    right:0\n`","import React from 'react'\nimport {VS,Container,User,Ia} from './styles/Scoreboard'\nexport const Scoreboard = ({userName,userPoints,iaPoints}={}) =>{\n    return(\n        <div className=\"row \">\n            <Container className=\"container-fluid\">\n                <div className=\"row\">\n                    <User className=\"col text-center px-5 py-5\">\n                        <h1>\n                            {userName}\n                        </h1>\n                        <hr/>\n                        <h1>\n                            {userPoints}\n                        </h1>\n                    </User>\n                    <Ia className=\"col text-center px-5 py-5\">\n                        <h1>\n                            I.A\n                        </h1>\n                        <hr/>\n                        <h1>\n                            {iaPoints}\n                        </h1>\n                    </Ia>\n                </div>\n                <VS>V S</VS>\n            </Container>\n        </div>\n    )\n}","import styled, {keyframes,css} from 'styled-components'\n\nconst fadeInKeyframes = keyframes`\n    from{\n        opacity:0;\n        transform: scale(0)\n    }\n    to{\n        opacity:1;\n        transform: scale(1)\n    }\n`\n\nconst fadeIn = css`\n    animation: 1s ${fadeInKeyframes} ease \n`\n\nexport const FeedBack = styled.div`\n    ${fadeIn};\n    position:absolute;\n    top:50%;\n    bottom:0;\n    left:0;\n    right:0\n`\nexport const Button = styled.div`\n    border: 1px solid white;\n    border-radius:50%;\n    transition: .5s;\n    cursor:pointer;\n    &.active{\n        color:blue\n    }\n    &.active-ia{\n        color:red\n    }\n    &:hover{\n        background-color:grey\n    }\n`","import React, {useState} from 'react'\nimport {Button , FeedBack} from './styles/Buttons'\nimport {FaHandRock, FaHandPaper, FaHandScissors} from 'react-icons/fa'\n\nexport const Buttons = ({iaPoints,userPoints,setIaPoints,setUserPoints,userName}) =>{\n    const [feedBack, setFeedBack] = useState(undefined)\n    const calcularGanador = (userElection) => {\n        const iaElection = setIaElection()\n        if(userElection!==iaElection){\n            activeButton(iaElection,true)\n            if(userElection==='Rock'){\n                if(iaElection==='Paper'){\n                    setIaPoints(++iaPoints)\n                    setFeedBack('Gana I.A.')\n                }\n                else{\n                    setUserPoints(++userPoints)\n                    setFeedBack('Gana '+userName)\n                }\n            }\n            else if(userElection==='Paper'){\n                if(iaElection==='Rock'){\n                    setUserPoints(++userPoints)\n                    setFeedBack('Gana '+userName)\n                }\n                else{\n                    setIaPoints(++iaPoints)\n                    setFeedBack('Gana I.A.')\n                }\n            }\n            else{\n                if(iaElection==='Rock'){\n                    setIaPoints(++iaPoints)\n                    setFeedBack('Gana I.A.')\n                }\n                else{\n                    setUserPoints(++userPoints)\n                    setFeedBack('Gana '+userName)\n                }\n            }\n        }\n        else{\n            setFeedBack('Empate')\n        }\n        setTimeout(() => {\n            setFeedBack(undefined)\n        }, 2000);\n    }\n    const setIaElection = () =>{\n        switch (Math.trunc(Math.random()*3)) {\n            case 0:\n                return 'Rock'\n            case 1:\n                return 'Paper'\n            case 2:\n                return 'Scissors'\n            default:\n                break;\n        }\n    }\n    const activeButton = (id,iaElection=false) =>{\n        let element = document.getElementById(id)\n        const clase = element.className\n        element.className=`${clase} active${iaElection?'-ia':''}`\n        setTimeout(() => {\n            element.className=clase\n        }, 1000);\n\n    }\n    return(\n        <>  \n            {feedBack?\n                <FeedBack className=\"row\">\n                    <div className=\"col-6 offset-3\">\n                        <div class=\"alert alert-primary\" role=\"alert\">\n                            {feedBack}\n                        </div>\n                    </div>\n                </FeedBack>\n                :\n                null\n            }\n            <div className=\"row\">\n                <div className=\"container\">\n                    <div className=\"row d-flex align-items-center justify-content-around\">\n                        <div className=\"col-auto\">\n                            <Button className='p-4' id='Rock'>\n                                <FaHandRock size='100px' onClick={e=>{\n                                    activeButton('Rock')\n                                    calcularGanador('Rock')\n                                }}/>\n                            </Button>\n                        </div>\n                        <div className=\"col-auto\">\n                            <Button className='p-4' id='Paper'>\n                                <FaHandPaper size='100px' onClick={e=>{\n                                    activeButton('Paper')\n                                    calcularGanador('Paper')\n                                }}/>\n                            </Button>\n                        </div>\n                        <div className=\"col-auto\">\n                            <Button className='p-4' id='Scissors'>\n                                <FaHandScissors size='100px' onClick={e=>{\n                                    activeButton('Scissors')\n                                    calcularGanador('Scissors')\n                                }}/>\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","import React, {useState} from 'react'\nimport { Scoreboard } from '../Components/Scoreboard'\nimport { Buttons } from '../Components/Buttons'\n\nexport const Game = ({userName}) =>{\n    const [userPoints, setuserPoints] = useState(0);\n    const [iaPoints, setiaPoints] = useState(0);\n\n    return(\n        <>\n            <Scoreboard \n                userName={userName} \n                userPoints={userPoints} \n                iaPoints={iaPoints}\n            />\n            <Buttons \n                userPoints={userPoints} \n                iaPoints={iaPoints} \n                setUserPoints={setuserPoints} \n                setIaPoints={setiaPoints}\n                userName={userName}\n            />\n        </>\n    )\n}","import React from 'react'\n\nexport const Login = ({setuserName}) =>{\n    return(\n        <>\n            <div className=\"row\">\n                <div className=\"col-2 offset-5\">\n                    <form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"user\">Nombre de Usuario</label>\n                            <input type=\"text\" className=\"form-control\" id='user'/>\n                        </div>\n                        <button type='submit' className='btn btn-outline-light' onClick={e=>{\n                            const name= document.getElementById('user').value\n                            if(name){\n                                setuserName(name)\n                            }\n                        }}>Ingresa!</button>\n                    </form>\n                </div>\n            </div>\n        </>\n    )\n}","import React, {useState} from 'react'\nimport {Container} from './style'\nimport {Game} from './Game'\nimport {Login} from './Login'\nexport const Layout = () =>{\n    const [userName, setuserName] = useState(undefined);\n    return(\n        <Container className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-auto ml-auto mr-auto\">\n                    <h3>Piedra Papel o Tijera</h3>\n                </div>\n            </div>\n            {userName?\n                <Game userName={userName}/>\n                :\n                <Login setuserName={setuserName}/>\n            }\n        </Container>\n    )\n}","import React from 'react';\nimport './App.css';\nimport {Layout} from './Pages/Layout'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Layout/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}